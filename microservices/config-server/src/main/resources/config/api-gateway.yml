# ===========================================
# API Gateway - Configurações Centralizadas
# ===========================================
server:
  port: 8080

spring:
  application:
    name: api-gateway
  profiles:
    active: dev
  cloud:
    gateway:
      # Descoberta de serviços automática
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      # Configurações globais
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
      # Rotas específicas
      routes:
        # User Service Routes
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/v1/users/**, /api/v1/auth/**
          filters:
            - StripPrefix=0
            - name: CircuitBreaker
              args:
                name: user-service-cb
                fallbackUri: forward:/fallback/user-service
        
        # Product Service Routes
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/v1/products/**
          filters:
            - StripPrefix=0
            - name: CircuitBreaker
              args:
                name: product-service-cb
                fallbackUri: forward:/fallback/product-service
            
        # Order Service Routes
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/v1/orders/**
          filters:
            - StripPrefix=0
            - name: CircuitBreaker
              args:
                name: order-service-cb
                fallbackUri: forward:/fallback/order-service
            
        # Eureka Server Web UI
        - id: eureka-server
          uri: http://localhost:8761
          predicates:
            - Path=/eureka/web
          filters:
            - SetPath=/
            
        # Eureka Server API
        - id: eureka-api
          uri: http://localhost:8761
          predicates:
            - Path=/eureka/apps/**
          filters:
            - StripPrefix=0

# Eureka Service Discovery
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
    registry-fetch-interval-seconds: 30
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

# Resilience4j Circuit Breaker
resilience4j:
  circuitbreaker:
    instances:
      user-service-cb:
        register-health-indicator: true
        ring-buffer-size-in-closed-state: 5
        ring-buffer-size-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        record-exceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
      product-service-cb:
        register-health-indicator: true
        ring-buffer-size-in-closed-state: 5
        ring-buffer-size-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
      order-service-cb:
        register-health-indicator: true
        ring-buffer-size-in-closed-state: 5
        ring-buffer-size-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50

# Actuator - Monitoramento
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
  info:
    env:
      enabled: true

# Logging
logging:
  level:
    org.springframework.cloud.gateway: INFO
    org.springframework.cloud.netflix.eureka: INFO
    reactor.netty: INFO
    org.springframework.web: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"

# Info da aplicação
info:
  app:
    name: API Gateway
    description: Single entry point for all E-commerce Microservices
    version: 1.0.0
        include: "*"
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    com.ecommerce: DEBUG
