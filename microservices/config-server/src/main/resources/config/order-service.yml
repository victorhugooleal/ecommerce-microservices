# ===========================================
# Order Service - Configurações Centralizadas
# ===========================================
server:
  port: 8083

spring:
  application:
    name: order-service
  profiles:
    active: dev
    
  # Banco de dados MySQL (porta diferente para isolamento)
  datasource:
    url: jdbc:mysql://localhost:3308/order_db?createDatabaseIfNotExist=true&serverTimezone=UTC
    username: root
    password: admin123
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      
  # JPA/Hibernate
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        use_sql_comments: true
        
  # Jackson (JSON serialization)
  jackson:
    property-naming-strategy: SNAKE_CASE
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

# Eureka Service Discovery
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
    registry-fetch-interval-seconds: 30
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

# Actuator - Monitoramento
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env
  endpoint:
    health:
      show-details: always
  health:
    db:
      enabled: true
  info:
    env:
      enabled: true

# Feign Clients Configuration
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 10000
        loggerLevel: full
      user-service:
        url: http://localhost:8081
      product-service:
        url: http://localhost:8082

# Services URLs (fallback se Eureka não estiver disponível)
services:
  user-service:
    url: http://localhost:8081
  product-service:
    url: http://localhost:8082

# Order Service Configuration
order:
  number:
    prefix: "ORD"
  delivery:
    default-days: 7
  payment:
    timeout-minutes: 30
  stock:
    reservation-timeout-minutes: 15

# Logging
logging:
  level:
    com.ecommerce.orderservice: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.web: DEBUG
    org.springframework.cloud.openfeign: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"

# Info da aplicação
info:
  app:
    name: Order Service
    description: Microservice for order management and inter-service communication
    version: 1.0.0

# Service Communication
services:
  user-service:
    url: http://user-service
  product-service:
    url: http://product-service

logging:
  level:
    com.ecommerce: DEBUG
    org.hibernate.SQL: DEBUG

---
# ===========================================
# Docker Profile - Configurações para Container
# ===========================================
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:mysql://mysql-order:3306/order_db?createDatabaseIfNotExist=true&serverTimezone=UTC
    username: orderapp
    password: orderpass123

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
