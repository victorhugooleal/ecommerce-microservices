version: '3.8'

services:
  # Databases
  mysql-user:
    image: mysql:8.0
    container_name: mysql-user
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_db
    ports:
      - "3306:3306"
    volumes:
      - mysql-user-data:/var/lib/mysql
    networks:
      - microservices-network

  mysql-product:
    image: mysql:8.0
    container_name: mysql-product
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: product_db
    ports:
      - "3307:3306"
    volumes:
      - mysql-product-data:/var/lib/mysql
    networks:
      - microservices-network

  mysql-order:
    image: mysql:8.0
    container_name: mysql-order
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: order_db
    ports:
      - "3308:3306"
    volumes:
      - mysql-order-data:/var/lib/mysql
    networks:
      - microservices-network

  # Infrastructure Services
  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      - JAVA_OPTS=-Xmx256m -Xms256m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - microservices-network

  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - JAVA_OPTS=-Xmx256m -Xms256m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - microservices-network

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      - JAVA_OPTS=-Xmx256m -Xms256m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - microservices-network

  # Business Services
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8081:8081"
    depends_on:
      mysql-user:
        condition: service_started
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      - JAVA_OPTS=-Xmx512m -Xms512m
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - microservices-network

  product-service:
    build: ./product-service
    container_name: product-service
    ports:
      - "8082:8082"
    depends_on:
      mysql-product:
        condition: service_started
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      - JAVA_OPTS=-Xmx512m -Xms512m
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - microservices-network

  order-service:
    build: ./order-service
    container_name: order-service
    ports:
      - "8083:8083"
    depends_on:
      mysql-order:
        condition: service_started
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      user-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
    environment:
      - JAVA_OPTS=-Xmx512m -Xms512m
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  mysql-user-data:
  mysql-product-data:
  mysql-order-data:
